---

- name: "Install necessary packages required by this ansible role"
  yum:
    name: "{{ item }}"
    state: "latest"
  with_items:
    - "epel-release"    
    - "git"
    - "MySQL-python"         # required for mysql_db
    - "libsemanage-python"   # required for selinux checks
    - "policycoreutils-python" # required for selinux checks

- name: "Ensure pip, setuptools, virtualenv are not installed from packages"
  package:
    name: "{{ item }}"
    state: "absent"
  with_items:
    - "python-pip"
    - "python2-pip"
    - "python-setuptools"
    - "python-virtualenv"

- name: "Download get-pip.py"
  get_url:
    url: "https://bootstrap.pypa.io/get-pip.py"
    dest: "/root/get-pip.py"  

- name: "Install pip with get-pip.py"
  command: "python get-pip.py"
  args:
    chdir: "/root/"

- name: "Install virtualenv and setuptools with pip"
  pip:
    name: "{{ item }}"
    state: "latest"
  with_items:
    - "setuptools"
    - "virtualenv"

- name: "Create user archivematica"
  user:
    name: "archivematica"
    uid: "333"
    system: "yes"
    groups: "audio"
    home: "/var/lib/archivematica"

- name: "Add archivematica user permissions in visudo file"
  lineinfile:
    dest: "/etc/sudoers"
    state: "present"
    regexp: "^archivematica ALL\\="
    line: "archivematica ALL=NOPASSWD:/bin/mv,/bin/chown,/bin/chmod,/usr/bin/find,/usr/bin/gs,/usr/bin/inkscape"
    validate: "/usr/sbin/visudo -cf %s"

- name: "Expand archivematica_src_dir"
  set_fact:
    archivematica_src_dir: "{{ archivematica_src_dir|expanduser }}"

- name: "Create archivematica_src_dir"
  file:
    state: "directory"
    path: "{{ archivematica_src_dir }}"

- name: "Checkout out archivematica-sampledata repository"
  git:
    repo: "https://github.com/artefactual/archivematica-sampledata.git"
    dest: "~/archivematica-sampledata"
    update: "no"
  when: "archivematica_src_install_sample_data|bool"
  become: "no"

- name: "Configure SELinux httpd permissions "
  become: "yes"
  seboolean:
    name: "{{ item }}"
    state: "yes"
    persistent: "yes"
  with_items:
    - "httpd_can_network_connect"       # Allow nginx connections to Gunicorn
    - "httpd_can_network_connect_db"    # Allow nginx to connect to MySQL
    - "httpd_setrlimit"                 # Allow nginx to change system limits
  when: ansible_selinux.status == "enabled"

- name: "SELinux: Allow nginx to use ports 8000 and 8001"
  become: "yes"
  seport:
    ports: "8000,8001"
    proto: "tcp"
    setype: "http_port_t"
    state: "present"
  when: ansible_selinux.status == "enabled"
