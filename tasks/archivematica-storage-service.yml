---

# Archivematica Storage Service installer

# This file is divided into the following blocks:
#   0- Clone source repo
#   1- OS dependencies (debian packages)
#   2- python dependencies (pip packages)
#   3- OS configuration (user/directory/file creation/permissions/ownership )
#   4- SS code install
#   5- Database config
#   6- web server config

###########################################################
#   0- Clone source repo
###########################################################

- name: "Checkout archivematica-storage-service code"
  git:
    repo: "https://github.com/artefactual/archivematica-storage-service.git"
    dest: "{{ archivematica_src_dir }}/archivematica-storage-service"
    version: "{{ archivematica_src_ss_version }}"
    force: "yes"
  tags: am-src-ss-clone
# For some reason, some dirs in the cloned source code
# are not sometimes readable by all. Add a task to fix it
# For some other reason this task does not always work
# blame ansible  :-/
# Update: this problem may have been fixed with postinst removal
- name: "Ensure the source code is readable by all"
  file:
    path: "{{ archivematica_src_dir }}/archivematica-storage-service"
    mode: "o+rX"
    recurse: "yes"
  sudo: "yes"
  tags: am-src-ss-clone

- name: "Get archivematica-storage-service latest commit hash"
  command: "git rev-parse HEAD"
  args:
    chdir: "{{ archivematica_src_dir }}/archivematica-storage-service"
  register: "latest_commit_ss"
  tags: am-src-ss-clone

- name: "Save Archivematica Storage Service latest commit hash"
  shell: "echo {{ latest_commit_ss.stdout }} > {{ archivematica_src_dir }}/archivematica-storage-service-commit.txt"
  tags: am-src-ss-clone
# TODO: Make use of latest_commit_ss

###########################################################
#   1- OS dependencies (debian packages)
###########################################################

- name: "Install archivematica-storage-service package dependencies (ref. debian/control)"
  apt:
    pkg: "{{ item }}"
    state: "latest"
  with_items:
    - "python-lxml"
    - "nginx"
    - "unar"
    - "uwsgi"
    - "uwsgi-plugin-python"
  tags: am-src-ss-osdep

- name: "Install archivematica-storage-service additional package dependencies"
  apt:
    pkg: "{{ item }}"
    state: "latest"
  with_items:
    - "python-virtualenv"
    - "python-dev"
    - "libxml2-dev"
    - "libxslt1-dev"
    - "libz-dev"
    - "libffi-dev"
    - "libssl-dev"
  tags: am-src-ss-osdep

###########################################################
#   2- python dependencies (pip packages)
###########################################################

- name: "Create virtualenv for archivematica-storage-service (ref. dh-virtualenv)"
  pip:
    chdir: "{{ archivematica_src_dir }}/archivematica-storage-service"
    requirements: "requirements.txt"
    virtualenv: "/usr/share/python/archivematica-storage-service"
    extra_args: "--find-links lib"
    state: latest
  tags: am-src-ss-pydep

###########################################################
#   3- OS configuration (user/directory/file creation/permissions/ownership )
###########################################################

- name: "Create subdirectories for archivematica-storage-service source files (ref. debian/archivematica-storage-service.install)"
  file:
    dest: "{{ item }}"
    state: "directory"
  with_items:
    - "/var/archivematica/storage-service"
    - "/usr/lib/archivematica"
  tags: am-src-ss-osconf

- name: "Set owner, group, mode of /var/archivematica recursively"
  file:
    dest: "/var/archivematica"
    state: "directory"
    recurse: "yes"
    owner: "archivematica"
    group: "archivematica"
    mode: "u=rwX,g=rwX,o=rX"

- name: "Create archivematica-storage-service log directories"
  file:
    dest: "{{ item }}"
    state: "directory"
    owner: "archivematica"
    group: "archivematica"
    mode: "g+s"
  with_items:
    - "/var/log/archivematica/storage-service"
  tags: am-src-ss-osconf

- name: "Touch SS log files"
  file:
    path: "/var/log/archivematica/storage-service/{{ item }}"
    owner: "archivematica"
    group: "archivematica"
    state: "touch"
  with_items:
    - "storage_service.log"
    - "storage_service_debug.log"
  tags: am-src-ss-osconf


###########################################################
#   4- SS code install
###########################################################

# storage service base dir:  /usr/lib/archivematica/storage-service

- name: "Copy archivematica-storage-service source files"
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: "link"
  with_items:
    - src: "{{ archivematica_src_dir }}/archivematica-storage-service/storage_service"
      dest: "/usr/lib/archivematica/storage-service"
  tags: am-src-ss-code

- name: "Run SS django collectstatic"
  django_manage:
    command=collectstatic
    app_path=/usr/lib/archivematica/storage-service
    virtualenv=/usr/share/python/archivematica-storage-service
  environment:
      DJANGO_SECRET_KEY: "{{ archivematica_src_ss_django_secret_key }}"
      DJANGO_SETTINGS_MODULE: "{{ archivematica_src_ss_env_django_setings_module }}"
      DJANGO_STATIC_ROOT: "{{ archivematica_src_ss_env_django_static_root }}"
      EMAIL_HOST: "{{ archivematica_src_ss_env_email_host }}"
      EMAIL_HOST_PASSWORD: "{{ archivematica_src_ss_env_email_host_password }}"
      EMAIL_HOST_USER: "{{ archivematica_src_ss_env_email_host_user }}"
      EMAIL_PORT: "{{ archivematica_src_ss_env_email_port }}"
      SS_DB_HOST: "{{ archivematica_src_ss_env_ss_db_host }}"
      SS_DB_NAME: "{{ archivematica_src_ss_env_ss_db_name }}"
      SS_DB_PASSWORD: "{{ archivematica_src_ss_env_ss_db_password }}"
      SS_DB_USER: "{{ archivematica_src_ss_env_ss_db_user }}"
  tags: am-src-ss-code


###########################################################
#   5- Database config
###########################################################

- name: "Remove SS DB"
  file:
    state: "absent"
    path: "{{ archivematica_src_ss_env_ss_db_name }}"
  when: archivematica_src_reset_ss_db
  tags: am-src-ss-db

- name: "Run SS django manage syncdb"
  django_manage:
    command=syncdb
    app_path=/usr/lib/archivematica/storage-service
    virtualenv=/usr/share/python/archivematica-storage-service
  environment:
      DJANGO_SECRET_KEY: "{{ archivematica_src_ss_django_secret_key }}"
      DJANGO_SETTINGS_MODULE: "{{ archivematica_src_ss_env_django_setings_module }}"
      DJANGO_STATIC_ROOT: "{{ archivematica_src_ss_env_django_static_root }}"
      EMAIL_HOST: "{{ archivematica_src_ss_env_email_host }}"
      EMAIL_HOST_PASSWORD: "{{ archivematica_src_ss_env_email_host_password }}"
      EMAIL_HOST_USER: "{{ archivematica_src_ss_env_email_host_user }}"
      EMAIL_PORT: "{{ archivematica_src_ss_env_email_port }}"
      SS_DB_HOST: "{{ archivematica_src_ss_env_ss_db_host }}"
      SS_DB_NAME: "{{ archivematica_src_ss_env_ss_db_name }}"
      SS_DB_PASSWORD: "{{ archivematica_src_ss_env_ss_db_password }}"
      SS_DB_USER: "{{ archivematica_src_ss_env_ss_db_user }}"
  when: archivematica_src_ss_run_syncdb
  tags: am-src-ss-db

- name: "Run SS django database migrations"
  django_manage:
    command=migrate
    app_path=/usr/lib/archivematica/storage-service
    virtualenv=/usr/share/python/archivematica-storage-service
  environment:
      DJANGO_SECRET_KEY: "{{ archivematica_src_ss_django_secret_key }}"
      DJANGO_SETTINGS_MODULE: "{{ archivematica_src_ss_env_django_setings_module }}"
      DJANGO_STATIC_ROOT: "{{ archivematica_src_ss_env_django_static_root }}"
      EMAIL_HOST: "{{ archivematica_src_ss_env_email_host }}"
      EMAIL_HOST_PASSWORD: "{{ archivematica_src_ss_env_email_host_password }}"
      EMAIL_HOST_USER: "{{ archivematica_src_ss_env_email_host_user }}"
      EMAIL_PORT: "{{ archivematica_src_ss_env_email_port }}"
      SS_DB_HOST: "{{ archivematica_src_ss_env_ss_db_host }}"
      SS_DB_NAME: "{{ archivematica_src_ss_env_ss_db_name }}"
      SS_DB_PASSWORD: "{{ archivematica_src_ss_env_ss_db_password }}"
      SS_DB_USER: "{{ archivematica_src_ss_env_ss_db_user }}"
  tags: am-src-ss-db


###########################################################
#   6- web server config
###########################################################

- name: "set nginx sites-available config file"
  template:
    src: "etc_nginx_sites_storage.conf.j2"
    dest: "/etc/nginx/sites-available/storage.conf"
  tags: am-src-ss-websrv

- name: "set uwsgi apps-available config file"
  template:
    src: "etc_uwsgi_apps_storage.ini.j2"
    dest: "/etc/uwsgi/apps-available/storage.ini"
  tags: am-src-ss-websrv

- name: "Remove Nginx default server"
  file:
    path: "{{ item }}"
    state: "absent"
  with_items:
    - "/etc/nginx/sites-available/default"
    - "/etc/nginx/sites-available/default.conf"
    - "/etc/nginx/sites-enabled/default"
    - "/etc/nginx/sites-enabled/default.conf"
  tags: am-src-ss-websrv

- name: "Set up Nginx server"
  file:
    src: "/etc/nginx/sites-available/storage.conf"
    dest: "/etc/nginx/sites-enabled/storage.conf"
    state: "link"
  tags: am-src-ss-websrv

- name: "Set up uWSGI server"
  file:
    src: "/etc/uwsgi/apps-available/storage.ini"
    dest: "/etc/uwsgi/apps-enabled/storage.ini"
    state: "link"
  tags: am-src-ss-websrv

- name: "Enable services"
  service:
    name: "{{ item }}"
    state: "restarted"
    enabled: "yes"
  with_items:
    - "nginx"
    - "uwsgi"
  tags: am-src-ss-websrv
